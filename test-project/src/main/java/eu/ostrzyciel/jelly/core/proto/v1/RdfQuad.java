// Code generated by protocol buffer compiler. Do not edit!
package eu.ostrzyciel.jelly.core.proto.v1;

import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.InvalidProtocolBufferException;
import eu.neverblink.protoc.java.runtime.MessageFactory;
import eu.neverblink.protoc.java.runtime.ProtoMessage;
import java.io.IOException;

/**
 * Protobuf type {@code RdfQuad}
 */
@SuppressWarnings("hiding")
public final class RdfQuad extends ProtoMessage<RdfQuad> implements Cloneable {
  /**
   * <code>oneof subject { ... }</code>
   */
  private Object subject = null;

  private byte subjectNumber = 0;

  /**
   * <code>oneof predicate { ... }</code>
   */
  private Object predicate = null;

  private byte predicateNumber = 0;

  /**
   * <code>oneof object { ... }</code>
   */
  private Object object = null;

  private byte objectNumber = 0;

  /**
   * <code>oneof graph { ... }</code>
   */
  private Object graph = null;

  private byte graphNumber = 0;

  private RdfQuad() {
  }

  /**
   * @return a new empty instance of {@code RdfQuad}
   */
  public static RdfQuad newInstance() {
    return new RdfQuad();
  }

  public boolean hasSubject() {
    return subject != null;
  }

  /**
   * Low-level setter for the <code>subject</code> oneof field.
   * Use with care, as it will not check the type of the value.
   */
  public void setSubject(Object subject, byte number) {
    this.subject = subject;
    this.subjectNumber = number;
  }

  /**
   * Sets the <code>subject</code> oneof field to sIri.
   */
  public void setSIri(RdfIri sIri) {
    this.subject = sIri;
    this.subjectNumber = 1;
  }

  /**
   * Sets the <code>subject</code> oneof field to sBnode.
   */
  public void setSBnode(String sBnode) {
    this.subject = sBnode;
    this.subjectNumber = 2;
  }

  /**
   * Sets the <code>subject</code> oneof field to sLiteral.
   */
  public void setSLiteral(RdfLiteral sLiteral) {
    this.subject = sLiteral;
    this.subjectNumber = 3;
  }

  /**
   * Sets the <code>subject</code> oneof field to sTripleTerm.
   */
  public void setSTripleTerm(RdfTriple sTripleTerm) {
    this.subject = sTripleTerm;
    this.subjectNumber = 4;
  }

  /**
   * Returns the <code>subject</code> oneof field.
   */
  public Object getSubject() {
    return subject;
  }

  /**
   * Returns the set field number of the <code>subject</code> oneof field.
   */
  public byte getSubjectFieldNumber() {
    return subjectNumber;
  }

  /**
   * Returns the <code>subject</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfIri getSIri() {
    return (RdfIri) subject;
  }

  /**
   * Returns the <code>subject</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public String getSBnode() {
    return (String) subject;
  }

  /**
   * Returns the <code>subject</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfLiteral getSLiteral() {
    return (RdfLiteral) subject;
  }

  /**
   * Returns the <code>subject</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfTriple getSTripleTerm() {
    return (RdfTriple) subject;
  }

  public boolean hasPredicate() {
    return predicate != null;
  }

  /**
   * Low-level setter for the <code>predicate</code> oneof field.
   * Use with care, as it will not check the type of the value.
   */
  public void setPredicate(Object predicate, byte number) {
    this.predicate = predicate;
    this.predicateNumber = number;
  }

  /**
   * Sets the <code>predicate</code> oneof field to pIri.
   */
  public void setPIri(RdfIri pIri) {
    this.predicate = pIri;
    this.predicateNumber = 5;
  }

  /**
   * Sets the <code>predicate</code> oneof field to pBnode.
   */
  public void setPBnode(String pBnode) {
    this.predicate = pBnode;
    this.predicateNumber = 6;
  }

  /**
   * Sets the <code>predicate</code> oneof field to pLiteral.
   */
  public void setPLiteral(RdfLiteral pLiteral) {
    this.predicate = pLiteral;
    this.predicateNumber = 7;
  }

  /**
   * Sets the <code>predicate</code> oneof field to pTripleTerm.
   */
  public void setPTripleTerm(RdfTriple pTripleTerm) {
    this.predicate = pTripleTerm;
    this.predicateNumber = 8;
  }

  /**
   * Returns the <code>predicate</code> oneof field.
   */
  public Object getPredicate() {
    return predicate;
  }

  /**
   * Returns the set field number of the <code>predicate</code> oneof field.
   */
  public byte getPredicateFieldNumber() {
    return predicateNumber;
  }

  /**
   * Returns the <code>predicate</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfIri getPIri() {
    return (RdfIri) predicate;
  }

  /**
   * Returns the <code>predicate</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public String getPBnode() {
    return (String) predicate;
  }

  /**
   * Returns the <code>predicate</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfLiteral getPLiteral() {
    return (RdfLiteral) predicate;
  }

  /**
   * Returns the <code>predicate</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfTriple getPTripleTerm() {
    return (RdfTriple) predicate;
  }

  public boolean hasObject() {
    return object != null;
  }

  /**
   * Low-level setter for the <code>object</code> oneof field.
   * Use with care, as it will not check the type of the value.
   */
  public void setObject(Object object, byte number) {
    this.object = object;
    this.objectNumber = number;
  }

  /**
   * Sets the <code>object</code> oneof field to oIri.
   */
  public void setOIri(RdfIri oIri) {
    this.object = oIri;
    this.objectNumber = 9;
  }

  /**
   * Sets the <code>object</code> oneof field to oBnode.
   */
  public void setOBnode(String oBnode) {
    this.object = oBnode;
    this.objectNumber = 10;
  }

  /**
   * Sets the <code>object</code> oneof field to oLiteral.
   */
  public void setOLiteral(RdfLiteral oLiteral) {
    this.object = oLiteral;
    this.objectNumber = 11;
  }

  /**
   * Sets the <code>object</code> oneof field to oTripleTerm.
   */
  public void setOTripleTerm(RdfTriple oTripleTerm) {
    this.object = oTripleTerm;
    this.objectNumber = 12;
  }

  /**
   * Returns the <code>object</code> oneof field.
   */
  public Object getObject() {
    return object;
  }

  /**
   * Returns the set field number of the <code>object</code> oneof field.
   */
  public byte getObjectFieldNumber() {
    return objectNumber;
  }

  /**
   * Returns the <code>object</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfIri getOIri() {
    return (RdfIri) object;
  }

  /**
   * Returns the <code>object</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public String getOBnode() {
    return (String) object;
  }

  /**
   * Returns the <code>object</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfLiteral getOLiteral() {
    return (RdfLiteral) object;
  }

  /**
   * Returns the <code>object</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfTriple getOTripleTerm() {
    return (RdfTriple) object;
  }

  public boolean hasGraph() {
    return graph != null;
  }

  /**
   * Low-level setter for the <code>graph</code> oneof field.
   * Use with care, as it will not check the type of the value.
   */
  public void setGraph(Object graph, byte number) {
    this.graph = graph;
    this.graphNumber = number;
  }

  /**
   * Sets the <code>graph</code> oneof field to gIri.
   */
  public void setGIri(RdfIri gIri) {
    this.graph = gIri;
    this.graphNumber = 13;
  }

  /**
   * Sets the <code>graph</code> oneof field to gBnode.
   */
  public void setGBnode(String gBnode) {
    this.graph = gBnode;
    this.graphNumber = 14;
  }

  /**
   * Sets the <code>graph</code> oneof field to gDefaultGraph.
   */
  public void setGDefaultGraph(RdfDefaultGraph gDefaultGraph) {
    this.graph = gDefaultGraph;
    this.graphNumber = 15;
  }

  /**
   * Sets the <code>graph</code> oneof field to gLiteral.
   */
  public void setGLiteral(RdfLiteral gLiteral) {
    this.graph = gLiteral;
    this.graphNumber = 16;
  }

  /**
   * Returns the <code>graph</code> oneof field.
   */
  public Object getGraph() {
    return graph;
  }

  /**
   * Returns the set field number of the <code>graph</code> oneof field.
   */
  public byte getGraphFieldNumber() {
    return graphNumber;
  }

  /**
   * Returns the <code>graph</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfIri getGIri() {
    return (RdfIri) graph;
  }

  /**
   * Returns the <code>graph</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public String getGBnode() {
    return (String) graph;
  }

  /**
   * Returns the <code>graph</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfDefaultGraph getGDefaultGraph() {
    return (RdfDefaultGraph) graph;
  }

  /**
   * Returns the <code>graph</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfLiteral getGLiteral() {
    return (RdfLiteral) graph;
  }

  @Override
  public RdfQuad copyFrom(final RdfQuad other) {
    cachedSize = other.cachedSize;
    this.subject = other.subject;
    this.subjectNumber = other.subjectNumber;
    this.predicate = other.predicate;
    this.predicateNumber = other.predicateNumber;
    this.object = other.object;
    this.objectNumber = other.objectNumber;
    this.graph = other.graph;
    this.graphNumber = other.graphNumber;
    return this;
  }

  @Override
  public RdfQuad mergeFrom(final RdfQuad other) {
    cachedSize = -1;
    this.subject = other.subject;
    this.subjectNumber = other.subjectNumber;
    this.predicate = other.predicate;
    this.predicateNumber = other.predicateNumber;
    this.object = other.object;
    this.objectNumber = other.objectNumber;
    this.graph = other.graph;
    this.graphNumber = other.graphNumber;
    return this;
  }

  @Override
  public RdfQuad clear() {
    cachedSize = -1;
    this.subject = null;
    this.subjectNumber = 0;
    this.predicate = null;
    this.predicateNumber = 0;
    this.object = null;
    this.objectNumber = 0;
    this.graph = null;
    this.graphNumber = 0;
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (!(o instanceof RdfQuad)) {
      return false;
    }
    RdfQuad other = (RdfQuad) o;
    return subjectNumber == other.subjectNumber && (subjectNumber == 0 || subject.equals(other.subject))
      && predicateNumber == other.predicateNumber && (predicateNumber == 0 || predicate.equals(other.predicate))
      && objectNumber == other.objectNumber && (objectNumber == 0 || object.equals(other.object))
      && graphNumber == other.graphNumber && (graphNumber == 0 || graph.equals(other.graph));
  }

  @Override
  public void writeTo(final CodedOutputStream output) throws IOException {
  }

  @Override
  protected int computeSerializedSize() {
    int size = 0;
    return size;
  }

  @Override
  @SuppressWarnings("fallthrough")
  public RdfQuad mergeFrom(final CodedInputStream input) throws IOException {
    // Enabled Fall-Through Optimization (Quickbuf)
    int tag = input.readTag();
    while (true) {
      switch (tag) {
        case 0: {
          return this;
        }
        default: {
          if (!input.skipField(tag)) {
            return this;
          }
          tag = input.readTag();
          break;
        }
      }
    }
  }

  @Override
  public RdfQuad clone() {
    return new RdfQuad().copyFrom(this);
  }

  public static RdfQuad parseFrom(final byte[] data) throws InvalidProtocolBufferException {
    return ProtoMessage.mergeFrom(new RdfQuad(), data).checkInitialized();
  }

  public static RdfQuad parseFrom(final CodedInputStream input) throws IOException {
    return ProtoMessage.mergeFrom(new RdfQuad(), input).checkInitialized();
  }

  /**
   * @return factory for creating RdfQuad messages
   */
  public static MessageFactory<RdfQuad> getFactory() {
    return RdfQuadFactory.INSTANCE;
  }

  private enum RdfQuadFactory implements MessageFactory<RdfQuad> {
    INSTANCE;

    @Override
    public RdfQuad create() {
      return RdfQuad.newInstance();
    }
  }
}
