// Code generated by protocol buffer compiler. Do not edit!
package eu.ostrzyciel.jelly.core.proto.v1;

import com.google.protobuf.CodedInputStream;
import com.google.protobuf.CodedOutputStream;
import com.google.protobuf.InvalidProtocolBufferException;
import eu.neverblink.protoc.java.runtime.MessageFactory;
import eu.neverblink.protoc.java.runtime.ProtoMessage;
import java.io.IOException;

/**
 * Protobuf type {@code RdfGraphStart}
 */
@SuppressWarnings("hiding")
public final class RdfGraphStart extends ProtoMessage<RdfGraphStart> implements Cloneable {
  /**
   * <code>oneof graph { ... }</code>
   */
  private Object graph = null;

  private byte graphNumber = 0;

  private RdfGraphStart() {
  }

  /**
   * @return a new empty instance of {@code RdfGraphStart}
   */
  public static RdfGraphStart newInstance() {
    return new RdfGraphStart();
  }

  public boolean hasGraph() {
    return graph != null;
  }

  /**
   * Low-level setter for the <code>graph</code> oneof field.
   * Use with care, as it will not check the type of the value.
   */
  public void setGraph(Object graph, byte number) {
    this.graph = graph;
    this.graphNumber = number;
  }

  /**
   * Sets the <code>graph</code> oneof field to gIri.
   */
  public void setGIri(RdfIri gIri) {
    this.graph = gIri;
    this.graphNumber = 1;
  }

  /**
   * Sets the <code>graph</code> oneof field to gBnode.
   */
  public void setGBnode(String gBnode) {
    this.graph = gBnode;
    this.graphNumber = 2;
  }

  /**
   * Sets the <code>graph</code> oneof field to gDefaultGraph.
   */
  public void setGDefaultGraph(RdfDefaultGraph gDefaultGraph) {
    this.graph = gDefaultGraph;
    this.graphNumber = 3;
  }

  /**
   * Sets the <code>graph</code> oneof field to gLiteral.
   */
  public void setGLiteral(RdfLiteral gLiteral) {
    this.graph = gLiteral;
    this.graphNumber = 4;
  }

  /**
   * Returns the <code>graph</code> oneof field.
   */
  public Object getGraph() {
    return graph;
  }

  /**
   * Returns the set field number of the <code>graph</code> oneof field.
   */
  public byte getGraphFieldNumber() {
    return graphNumber;
  }

  /**
   * Returns the <code>graph</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfIri getGIri() {
    return (RdfIri) graph;
  }

  /**
   * Returns the <code>graph</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public String getGBnode() {
    return (String) graph;
  }

  /**
   * Returns the <code>graph</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfDefaultGraph getGDefaultGraph() {
    return (RdfDefaultGraph) graph;
  }

  /**
   * Returns the <code>graph</code> oneof field.
   * Use with care, as it will not check if the correct field numeber is actually set.
   */
  public RdfLiteral getGLiteral() {
    return (RdfLiteral) graph;
  }

  @Override
  public RdfGraphStart copyFrom(final RdfGraphStart other) {
    cachedSize = other.cachedSize;
    this.graph = other.graph;
    this.graphNumber = other.graphNumber;
    return this;
  }

  @Override
  public RdfGraphStart mergeFrom(final RdfGraphStart other) {
    cachedSize = -1;
    this.graph = other.graph;
    this.graphNumber = other.graphNumber;
    return this;
  }

  @Override
  public RdfGraphStart clear() {
    cachedSize = -1;
    this.graph = null;
    this.graphNumber = 0;
    return this;
  }

  @Override
  public boolean equals(Object o) {
    if (o == this) {
      return true;
    }
    if (!(o instanceof RdfGraphStart)) {
      return false;
    }
    RdfGraphStart other = (RdfGraphStart) o;
    return graphNumber == other.graphNumber && (graphNumber == 0 || graph.equals(other.graph));
  }

  @Override
  public void writeTo(final CodedOutputStream output) throws IOException {
  }

  @Override
  protected int computeSerializedSize() {
    int size = 0;
    return size;
  }

  @Override
  @SuppressWarnings("fallthrough")
  public RdfGraphStart mergeFrom(final CodedInputStream input) throws IOException {
    // Enabled Fall-Through Optimization (Quickbuf)
    int tag = input.readTag();
    while (true) {
      switch (tag) {
        case 0: {
          return this;
        }
        default: {
          if (!input.skipField(tag)) {
            return this;
          }
          tag = input.readTag();
          break;
        }
      }
    }
  }

  @Override
  public RdfGraphStart clone() {
    return new RdfGraphStart().copyFrom(this);
  }

  public static RdfGraphStart parseFrom(final byte[] data) throws InvalidProtocolBufferException {
    return ProtoMessage.mergeFrom(new RdfGraphStart(), data).checkInitialized();
  }

  public static RdfGraphStart parseFrom(final CodedInputStream input) throws IOException {
    return ProtoMessage.mergeFrom(new RdfGraphStart(), input).checkInitialized();
  }

  /**
   * @return factory for creating RdfGraphStart messages
   */
  public static MessageFactory<RdfGraphStart> getFactory() {
    return RdfGraphStartFactory.INSTANCE;
  }

  private enum RdfGraphStartFactory implements MessageFactory<RdfGraphStart> {
    INSTANCE;

    @Override
    public RdfGraphStart create() {
      return RdfGraphStart.newInstance();
    }
  }
}
